AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  manami-mura(S3 + CloudFront + Route53(ACM))

Globals:
  Function:
    Timeout: 3

Parameters:
  S3BucketName:
    Type: String
    Description: S3 Bucket Name for the website
    Default: # fill here
  DomainName:
    Type: String
    Description: Domain name for the website
    Default: # fill here
  Route53RecordDomainName:
    Type: String
    Description: Domain name for the website(https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-route53.html)
    Default: # fill here
  AcmCertificateArn:
    Type: String
    Description: ACM Certificate ARN for the website
    Default: # fill here
  HostedZoneId:
    Type: String
    Description: Hosted Zone ID for the website
    Default: # fill here

Resources:
  WebBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      BucketName: !Ref S3BucketName
  WebBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebBucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${WebBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Comment: !Sub ${AWS::StackName} CloudFront Distribution
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 86400
        Enabled: true
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
  Route53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: 'Z2FDTNDATAQYW2' # This is the hosted zone for all CloudFront distributions
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref Route53RecordDomainName
      Type: A
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${AWS::StackName} CloudFront Origin Access Identity
